#! /usr/bin/perl

use strict;
use warnings;
use Errno ();
use File::Basename qw(dirname);
use Getopt::Long;
use JSON::PP;
use Pod::Usage qw(pod2usage);

our $VERSION = '0.01';

our $DEFAULT_XSLT = "https://examp1e.net/benchart/benchart.xslt";

my ($opt_name, $opt_file, $opt_show, $opt_xsl);
$opt_file = "benchart.xml";

GetOptions(
    "name=s"   => \$opt_name,
    "file=s"   => \$opt_file,
    "show:s"   => \$opt_show,
    "xsl=s"    => \$opt_xsl,
    help       => sub {
        pod2usage(0);
    },
    version    => sub {
        print "$VERSION\n";
        exit 0;
    },
) or exit 1;

if (defined $opt_show) {
    $opt_show ||= "safari";
    my $pwd = dirname($0);
    exec "open", "-a", $opt_show, "benchart.xml";
    die "open(1) failed:$!";
}

die "script not specified\n"
    if ! ($opt_xsl || @ARGV);

# run the benchmark script
my $scores = (sub {
    return +{}
        unless @ARGV;
    open my $fh, "-|", (@ARGV)
        or die "failed to exec $ARGV[0]:$!";
    my $input = join ",", <$fh>;
    close $fh
        or die "benchmark script failed with exit status:$?\n";
    decode_json($input);
})->();

# obtain the default name
if (%$scores && ! defined $opt_name) {
    my $tags = `git describe --exact-match --tags 2> /dev/null`;
    if ($tags eq '') {
        $tags = `git show --pretty=format:\%h HEAD 2> /dev/null | head -1`;
        die "failed to obtain name via git; please use --name=<name> to specify the name of the benchmark\n"
            unless $tags ne '';
    }
    $opt_name = (split "\n", $tags)[0];
}

# read the existing records
my $xml = (sub {
    open my $fh, "<", $opt_file
        or do {
            if ($! == Errno::ENOENT) {
                return << "***";
<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="@{[xml_escape($DEFAULT_XSLT)]}"?>
<benchmarks>
</benchmarks>
***
            }
            die "failed to open file:$opt_file:$!";
        };
    local $/;
    <$fh>;
})->();

# update the records
if ($opt_xsl) {
    $opt_xsl ||= $DEFAULT_XSLT;
    $xml =~ s{(<\?xml-stylesheet .*?href=").*?("\?>)}{$1@{[xml_escape($opt_xsl)]}$2};
}
if (%$scores) {
    $xml =~ s{(</benchmarks)}{ join "\n", (
        qq{  <benchmark name="@{[xml_escape($opt_name)]}">},
        +(map {
            qq{    <score name="@{[xml_escape($_)]}" value="@{[xml_escape($scores->{$_})]}"/>}
        } sort keys %$scores),
        qq{  </benchmark>},
        $1,
    ) }sex;
}

# save the records
{
    open my $fh, '>', $opt_file
        or die "failed to open file:$opt_file:$!";
    print $fh $xml;
    close $fh;
}

sub xml_escape {
    my $s = shift;
    $s =~ s/&/&amp;/g;
    $s =~ s/</&lt;/g;
    $s =~ s/>/&gt;/g;
    $s =~ s/"/&quot;/g;
    $s =~ s/'/&#39;/g;
    $s;
}

__END__

=head1 NAME

benchart - benchmark recorder and visualizer

=head1 SYNOPSIS

  # run the benchmark script and record the numbers
  $0 -- <benchmark-script>

  # open Safari to show the charts
  $0 --show

=head1 DESCRIPTION

The command records the results of the conducted benchmarks in C<benchart.xml> which, when being opened by a web browser, draws a nice chart.

The benchmark script being run must emit a JSON mapping that contains key-values pairs of the scores.
E.g. in case of SunSpider benchmark, the result of the benchmark program should look like:

  {
    "3d/cube":             14.1,
    "3d/morph":            5.3,
    "3d/raytrace":         13.0,
    "access/binary-trees": 3.0,
    ...
  }

=head1 OPTIONS

=head2 --file=file

Sets the name of the file to record the benchmarks (default: C<benchart.xml>).

=head2 --name=name

Sets the name of the benchmark being recorded by the benchmark-script.
If omitted, the name will be the Git commit id of the current directory, or the tag name if any.

=head2 --show[=progname]

Opens the benchmark chart using the specified web browser (defaults to Safari).
Note that Google Chrome cannot be used for viewing the charts unless you set the XSLT link to a local file.

=head2 --xsl[=/path/to/xsl-file]

Path of the XSLT file to be recorded in C<benchart.xml>.
The default path is C<https://examp1e.net/benchart/benchart.xlst>.
The path is reset to the default if an empty value is specified.

=head1 AUTHOR

Kazuho Oku

=head1 LICENSE

MIT

=cut
